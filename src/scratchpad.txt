

std::chrono::year_month_day formatChronoDate(std::string dateStr)
{
	unsigned int day, month;
	int year;

	std::sscanf(dateStr.c_str(), "%d-%d-%d", &day, &month, &year);

	std::chrono::day chronoDay{day};
	std::chrono::month chronoMonth{month};
	std::chrono::year chronoYear{year};

	std::chrono::year_month_day chronoDate(chronoYear, chronoMonth, chronoDay);

	return chronoDate;
} 


// Chrono development
	std::string inputDate{"2-8-2025"};

	// formatChronoDate(inputDate);

	std::chrono::year_month_day projectStartDate{formatChronoDate(inputDate)};

	std::chrono::year_month_day projectEndDate{formatChronoDate("30-9-2025")};

	// std::chrono::sys_days sysProjectEndDate = std::chrono::sys_days(projectEndDate);
	// std::chrono::sys_days sysProjectStartDate = std::chrono::sys_days(projectStartDate);

	std::chrono::days duration{std::chrono::sys_days(projectEndDate) - std::chrono::sys_days(projectStartDate)};

	std::cout << "Number of days between the dates: " << duration.count() << " days\n";

	std::ostringstream oss;
	oss << std::setw(2) << std::setfill('0') << static_cast<unsigned>(projectStartDate.day()) << '-'
		<< std::setw(2) << std::setfill('0') << static_cast<unsigned>(projectStartDate.month()) << '-'
		<< static_cast<int>(projectStartDate.year());

	std::string dateStr = oss.str();
	std::cout << dateStr << '\n';